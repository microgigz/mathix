module MatrixMathConcern
  extend ActiveSupport::Concern

  def add(m2)

    if self.cardinatily == m2.cardinatily
      m = Matrix.new
      1.upto(self.cardinatily[:rows]) do |index|
        row_m1 = self.rows(index)
        row_m2 = m2.rows(index)
        row = []
        row_m1.each_with_index { |item, index| row << (item + row_m2[index]) }
        m.add_row(row)
      end
      m
    else
      raise "Cardinality does not match"
    end
  end

  def subtract(m2)
    if self.cardinatily == m2.cardinatily
      m = Matrix.new
      1.upto(self.cardinatily[:rows]) do |index|
        row_m1 = self.rows(index)
        row_m2 = m2.rows(index)
        row = []
        row_m1.each_with_index{|item, index| row << (item - row_m2[index]) }
        m.add_row row
      end
      m
    else
      raise "Cardinality does not match"
    end
  end

  def multiply(m2)
    if self.cardinatily[:cols] == m2.cardinatily[:rows]
      m = Matrix.new
      1.upto(self.cardinatily[:rows]) do |row_index|
        resultant_row = []
        row_m1 = self.rows(row_index)
        1.upto(m2.cardinatily[:cols]) do |col_index|
          col_m2 = m2.cols(col_index)
          row = []
          row_m1.each_with_index{|item, index| row << (item * col_m2[index]) }
          resultant_row << row.inject(&:+)
        end
        m.add_row(resultant_row)
      end
      m
    else
      raise "Cardinality for multiplication does not match"
    end
  end
end